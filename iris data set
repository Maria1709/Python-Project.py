# Project 25/03/2018
# Maria O Sullivan

# Will load the iris data set
from sklearn.datasets import load_iris
iris = load_iris()
type(iris)
print (iris.data)

# Prints out Iris names
from sklearn.datasets import load_iris
iris = load_iris()
type(iris)
print (iris.feature_names)


import pandas as pd
# my data- use panda to read cv file iris
mydataset = pd.read_csv('iris.csv')
#integer location
x = mydataset.iloc[:,0].values
# find minimum in column 1
print(min(x))
# find maximum in column 1
print(max(x))
#Result output for column 1: 4.3, 7.9


import pandas as pd
mydataset = pd.read_csv('iris.csv')
x = mydataset.iloc[:,1].values
print(min(x))
print(max(x))

#Result output for column 2: 2.0, 4.4

import pandas as pd
mydataset = pd.read_csv('iris.csv')
x = mydataset.iloc[:,2].values
print(min(x))
print(max(x))

#Result output for column 3: 1.0, 6.9

import pandas as pd
mydataset = pd.read_csv('iris.csv')
x = mydataset.iloc[:,3].values
print(min(x))
print(max(x))

#Result output for column 4: 0.1, 2.5



import pandas as pd
mydataset = pd.read_csv('iris.csv')
x = mydataset.iloc[:,4].values
print(min(x))
print(max(x))

#Result output for column 5:Iris Setosa, Iris Virginica



import pandas as pd
import numpy as numpy
import matplotlib as plt
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score 
from sklearn.metrics  import classification_report
from sklearn.metrics import confusion_matrix


# directory file, read, comma separated value (irisdata set)
df=pd.read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data",
# looking for Sepal Length, Sepal width, Petal length. petal with in order under names
names = ["Sepal length", "Sepal Width",  "Petal length", "Petal width", "Class"])
# a directory file of first ten rescords in a grid form
print(df.head(10))



import pandas as pd
import numpy as numpy
import matplotlib as plt
from sklearn.svm import SVC

from sklearn.metrics import accuracy_score 
from sklearn.metrics  import classification_report
from sklearn.metrics import confusion_matrix

df=pd.read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data",
names = ["Sepal length", "Sepal Width",  "Petal length", "Petal width", "Class"])
print (df.head(10))
# function(describe) to calculate standard deviation and the mean of the iris data set top ten in a column in a grid
print(df.describe())




# Calculate the mean of each column.
import numpy

# read data file into array.
data = numpy.genfromtxt('data/iris.csv', delimiter=',')

firstcol = data[:,0]
meanfirstcol = numpy.mean(data[:,0])

print("Average of the first column is: ", meanfirstcol)


 Calculate the mean of each column.
import numpy

# read data file into array.
data = numpy.genfromtxt('data/iris.csv', delimiter=',')

firstcol = data[:,0]
meanfirstcol = numpy.mean(data[:,0])

print("Average of the first column is: ", meanfirstcol)



import matplotlib.pyplot as pl
pl.hist (firstcol)
pl.show()





import pandas
from pandas.tools.plotting import scatter_matrix
import matplotlib.pyplot as pl
from sklearn import model_selection
from sklearn.metrics import classifcation_report
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighboursClassifier
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis
from sklearn.naive_bayes import GaussianNB
from sklearn.svm import SVC

dataset = pandas.read_csv('iris_dataset.csv')
# Reads the data and takes the first 5 rows and last 5 rows, gets std,mean, min,max,25%,50% and 75%.
dataset.head()
dataset.tail()
dataset.describe()


from sklearn.datasets import load_iris
iris = load_iris()

from matplotlib import pyplot as plt
# The indices of the features that we are plotting
x_index = 0
y_index = 1
# Thisformatter labels the colorbar with the appropriate target names
formatter = plt.FuncFormatter(lambda i, *args: iris.target_names[int(i)])

plt.figure(figsize=(5,4))
plt.scatter(iris.data[:, x_index], iris.data[:, y_index], c=iris.target)
plt.colorbar(ticks=[0,1,2], format=formatter)
plt.xlabel(iris.feature_names[x_index])
plt.ylabel(iris.feature_names[y_index])

plt.tight_layout()
plt.show()


from sklearn import neighbors, datasets
iris = datasets.load_iris()
x,y = iris.data, iris.target
knn = neighbors.KNeighborsClassifier(
    n_neighbors=1)
knn.fit(x,y)
    # what kind of iris has 3cm x 5cm sepal and 4cm x 2cm petal?
print(iris.target_names[knn.predict([[3,5,4,2]])])



